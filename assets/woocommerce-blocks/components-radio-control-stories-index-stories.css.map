{"version":3,"file":"components-radio-control-stories-index-stories.css","mappings":"AAcA","sources":["webpack://@woocommerce/block-library/./assets/css/abstracts/_mixins.scss","webpack://@woocommerce/block-library/./packages/components/radio-control/style.scss","webpack://@woocommerce/block-library/./assets/css/abstracts/_colors.scss","webpack://@woocommerce/block-library/./assets/css/abstracts/_variables.scss"],"sourcesContent":["$fontSizes: (\n\t\"smaller\": 0.75,\n\t\"small\": 0.875,\n\t\"regular\": 1,\n\t\"large\": 1.25,\n\t\"larger\": 2,\n);\n\n// Maps a named font-size to its predefined size. Units default to em, but can\n// be changed using the multiplier parameter.\n@mixin font-size($sizeName, $multiplier: 1em) {\n\tfont-size: map.get($fontSizes, $sizeName) * $multiplier;\n}\n\n@keyframes spinner__animation {\n\t0% {\n\t\tanimation-timing-function: cubic-bezier(0.5856, 0.0703, 0.4143, 0.9297);\n\t\ttransform: rotate(0deg);\n\t}\n\t100% {\n\t\ttransform: rotate(360deg);\n\t}\n}\n\n@keyframes loading__animation {\n\t100% {\n\t\ttransform: translateX(100%);\n\t}\n}\n\n// Adds animation to placeholder section\n@mixin placeholder($include-border-radius: true) {\n\toutline: 0 !important;\n\tborder: 0 !important;\n\tbackground-color: currentColor !important;\n\tcolor: currentColor !important;\n\twidth: 100%;\n\t@if $include-border-radius == true {\n\t\tborder-radius: 0.25rem;\n\t}\n\tdisplay: block;\n\tline-height: 1;\n\tposition: relative !important;\n\toverflow: hidden !important;\n\tmax-width: 100% !important;\n\tpointer-events: none;\n\tbox-shadow: none;\n\tz-index: 1; /* Necessary for overflow: hidden to work correctly in Safari */\n\topacity: 0.15;\n\n\t// Forces direct descendants to keep layout but lose visibility.\n\t> * {\n\t\tvisibility: hidden;\n\t}\n\n\t&::after {\n\t\tcontent: \" \";\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tright: 0;\n\t\ttop: 0;\n\t\theight: 100%;\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-image: linear-gradient(90deg, currentColor, #f5f5f54d, currentColor);\n\t\ttransform: translateX(-100%);\n\t\tanimation: loading__animation 1.5s ease-in-out infinite;\n\t}\n\n\t@media screen and (prefers-reduced-motion: reduce) {\n\t\tanimation: none;\n\t}\n}\n\n@mixin force-content() {\n\t&::before {\n\t\tcontent: \"\\00a0\";\n\t}\n}\n\n// Hide an element from sighted users, but available to screen reader users.\n@mixin visually-hidden() {\n\tborder: 0;\n\tclip: rect(1px, 1px, 1px, 1px);\n\tclip-path: inset(50%);\n\theight: 1px;\n\twidth: 1px;\n\tmargin: -1px;\n\toverflow: hidden;\n\t/* Many screen reader and browser combinations announce broken words as they would appear visually. */\n\toverflow-wrap: normal !important;\n\tword-wrap: normal !important;\n\tpadding: 0;\n\tposition: absolute !important;\n}\n\n@mixin visually-hidden-focus-reveal() {\n\tbackground-color: #fff;\n\tborder-radius: 3px;\n\tbox-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);\n\tclip: auto !important;\n\tclip-path: none;\n\tcolor: $input-text-active;\n\tdisplay: block;\n\tfont-size: 0.875rem;\n\tfont-weight: 700;\n\theight: auto;\n\tleft: 5px;\n\tline-height: normal;\n\tpadding: 15px 23px 14px;\n\ttext-decoration: none;\n\ttop: 5px;\n\twidth: auto;\n\tz-index: 100000;\n}\n\n@mixin reset-box() {\n\tborder: 0;\n\tborder-radius: 0;\n\tmargin: 0;\n\tpadding: 0;\n\tvertical-align: baseline;\n}\n\n@mixin reset-color() {\n\tcolor: inherit;\n}\n\n@mixin reset-typography() {\n\tfont-family: inherit;\n\tfont-size: inherit;\n\tfont-style: inherit;\n\tfont-weight: inherit;\n\tletter-spacing: inherit;\n\tline-height: inherit;\n\ttext-decoration: inherit;\n\ttext-transform: inherit;\n}\n\n// Reset <h1>, <h2>, etc. styles as if they were text. Useful for elements that must be headings for a11y but don't need those styles.\n@mixin text-heading() {\n\t@include reset-box();\n\t@include reset-color();\n\t@include reset-typography();\n\tbox-shadow: none;\n\tdisplay: inline;\n\n\tbackground: transparent;\n}\n\n// Reset <button> style as if it was text. Useful for elements that must be `<button>` for a11y but don't need those styles.\n@mixin text-button() {\n\t@include reset-box();\n\t@include reset-color();\n\t@include reset-typography();\n\tbackground: transparent;\n\tbox-shadow: none;\n\tdisplay: inline;\n\ttext-shadow: none;\n\n\t&:hover,\n\t&:focus,\n\t&:active {\n\t\tbackground: transparent;\n\t}\n}\n\n// Reset <button> style so we can use link style for action buttons.\n@mixin link-button() {\n\t@include text-button();\n\ttext-decoration: underline;\n}\n\n@mixin hover-effect() {\n\t&:hover {\n\t\ttext-decoration: none;\n\t\tcolor: inherit;\n\t\tcursor: pointer;\n\t}\n}\n\n// Reset <button> style so we can use link style for action buttons in filter blocks\n@mixin filter-link-button() {\n\t@include link-button();\n\t@include hover-effect();\n\t@include font-size(small);\n\ttext-decoration: underline;\n\tfont-weight: normal;\n\tcolor: inherit;\n}\n\n// Makes sure long words are broken if they overflow the container.\n@mixin wrap-break-word() {\n\t// This is the current standard, works in most browsers.\n\toverflow-wrap: anywhere;\n\t// Safari supports word-break.\n\tword-break: break-word;\n}\n\n// Shows an semi-transparent overlay\n@mixin with-background-dim($opacity: 0.5) {\n\t&.has-background-dim {\n\t\t.background-dim__overlay::before {\n\t\t\tcontent: \"\";\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\tbottom: 0;\n\t\t\tright: 0;\n\t\t\tbackground: inherit;\n\t\t\tborder-radius: inherit;\n\t\t\topacity: $opacity;\n\t\t\tz-index: 1;\n\t\t}\n\t}\n\n\t@for $i from 1 through 10 {\n\t\t&.has-background-dim-#{ $i * 10 } .background-dim__overlay::before {\n\t\t\topacity: $i * 0.1;\n\t\t}\n\t}\n}\n\n// Shows a border with the current color and a custom opacity. That can't be achieved\n// with normal border because `currentColor` doesn't allow tweaking the opacity, and\n// setting the opacity of the entire element would change the children's opacity too.\n@mixin with-translucent-border($border-width: 1px, $opacity: 0.3) {\n\tposition: relative;\n\n\t&::after {\n\t\tborder-style: solid;\n\t\tborder-width: $border-width;\n\t\tbottom: 0;\n\t\tcontent: \"\";\n\t\tdisplay: block;\n\t\tleft: 0;\n\t\topacity: $opacity;\n\t\tpointer-events: none;\n\t\tposition: absolute;\n\t\tright: 0;\n\t\ttop: 0;\n\t}\n}\n\n// Positions an element absolutely and stretches it over the container\n@mixin absolute-stretch() {\n\tmargin: 0;\n\tpadding: 0;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\twidth: 100%;\n\theight: 100%;\n}\n\n// Converts a px unit to em.\n@function em($size, $base: 16px) {\n\t@return math.div($size, $base) * 1em;\n}\n\n// Encodes hex colors so they can be used in URL content.\n@function encode-color($color) {\n\t@if type-of($color) != \"color\" or string.index(#{$color}, \"#\") != 1 {\n\t\t@return $color;\n\t}\n\n\t$hex: string.slice(color.ie-hex-str($color), 4);\n\t@return \"%23\" + unquote(\"#{$hex}\");\n}\n","@use \"sass:math\";@use \"sass:string\";@use \"sass:color\";@use \"sass:map\";@import \"_colors\"; @import \"_variables\"; @import \"_breakpoints\"; @import \"_mixins\"; .wc-block-components-radio-control--highlight-checked {\n\tposition: relative;\n\n\tdiv.wc-block-components-radio-control-accordion-option {\n\t\tposition: relative;\n\n\t\t// This ::after element is to fake a transparent border-top on each option.\n\t\t// We can't just use border-top on the option itself because of the border around the entire accordion.\n\t\t// Both borders have transparency so there's an overlap where the border is darker (due to adding two\n\t\t// transparent colours together). Doing it with an ::after lets us bring the \"border\" in by one pixel on each\n\t\t// side to avoid the overlap.\n\t\t&::after {\n\t\t\tcontent: \"\";\n\t\t\tbackground: $universal-border-light;\n\t\t\theight: 1px;\n\t\t\tright: 1px;\n\t\t\tleft: 1px;\n\t\t\ttop: 0;\n\t\t\tposition: absolute;\n\t\t}\n\n\t\t.has-dark-controls & {\n\t\t\t&::after {\n\t\t\t\tbackground: $input-border-dark;\n\t\t\t}\n\t\t}\n\n\t\t// The first child doesn't need a fake border-top because it's handled by its parent's border-top. This stops\n\t\t// a double border.\n\t\t&:first-child::after {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t// This rule removes the fake border-top from the selected element to prevent a double border.\n\t\t&.wc-block-components-radio-control-accordion-option--checked-option-highlighted + div.wc-block-components-radio-control-accordion-option::after {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t// Adds a \"border\" around the selected option. This is done with a box-shadow to prevent a double border on the left\n\t// and right of the selected element, and top and bottom of the first/last elements.\n\tlabel.wc-block-components-radio-control__option--checked-option-highlighted,\n\t.wc-block-components-radio-control-accordion-option--checked-option-highlighted {\n\t\tbox-shadow: 0 0 0 1.5px currentColor inset;\n\t\tborder-radius: 4px;\n\t}\n\n\t// Defines a border around the radio control. Cannot be done with normal CSS borders or outlines because when\n\t// selecting an item we get a double border on the left and right. It's not possible to remove the outer border just\n\t// for the selected element, but using a pseudo element gives us more control.\n\t&::after {\n\t\tcontent: \"\";\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tpointer-events: none;\n\t\tposition: absolute;\n\t\tborder: 1px solid $universal-border-light;\n\t\tborder-radius: 4px;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\n\t.has-dark-controls & {\n\t\t&::after {\n\t\t\tborder-color: $input-border-dark;\n\t\t}\n\t}\n\n\t// Remove the top border when the first element is selected, this is so we don't get a double border with the\n\t// box-shadow.\n\t&.wc-block-components-radio-control--highlight-checked--first-selected::after {\n\t\tborder-top: 0;\n\t\tmargin-top: 2px;\n\t}\n\n\t// Remove the bottom border when the last element is selected, this is so we don't get a double border with the\n\t// box-shadow.\n\t&.wc-block-components-radio-control--highlight-checked--last-selected::after {\n\t\tmargin-bottom: 2px;\n\t\tborder-bottom: 0;\n\t}\n\n\t// Remove the fake border-top from the item after the selected element, this is to prevent a double border with the\n\t// selected element's box-shadow.\n\t.wc-block-components-radio-control__option--checked-option-highlighted + .wc-block-components-radio-control__option::after {\n\t\tdisplay: none;\n\t}\n\n\t.wc-block-components-radio-control__option {\n\t\t// Add a fake border to the top of each radio option. This is because using CSS borders would result in an\n\t\t// overlap and two transparent borders combining to make a darker pixel. This fake border allows us to bring the\n\t\t// border in by one pixel on each side to avoid the overlap.\n\t\t&::after {\n\t\t\tcontent: \"\";\n\t\t\tbackground: $universal-border-light;\n\t\t\theight: 1px;\n\t\t\tright: 1px;\n\t\t\tleft: 1px;\n\t\t\ttop: 0;\n\t\t\tposition: absolute;\n\t\t}\n\n\t\t.has-dark-controls & {\n\t\t\t&::after {\n\t\t\t\tbackground: $input-border-dark;\n\t\t\t}\n\t\t}\n\n\t\t// The first child doesn't need a fake border-top because it's handled by its parent's border-top.\n\t\t&:first-child::after {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n.wc-block-components-radio-control__option {\n\t@include reset-color();\n\t@include reset-typography();\n\tdisplay: block;\n\tmargin: em($gap) 0;\n\tmargin-top: 0;\n\tpadding: 0 0 0 em($gap-larger);\n\tposition: relative;\n\tcursor: pointer;\n\n\t&:last-child {\n\t\tmargin-bottom: 0;\n\t}\n}\n\n.wc-block-components-radio-control__option-layout {\n\tdisplay: table;\n\twidth: 100%;\n}\n\n.wc-block-components-radio-control__option\n.wc-block-components-radio-control__option-layout {\n\t&::after {\n\t\tdisplay: none;\n\t}\n}\n\n.wc-block-components-radio-control__label-group,\n.wc-block-components-radio-control__description-group {\n\tdisplay: table-row;\n\n\t> span {\n\t\tdisplay: table-cell;\n\t}\n\n\t.wc-block-components-radio-control__secondary-label,\n\t.wc-block-components-radio-control__secondary-description {\n\t\ttext-align: right;\n\t\tmin-width: 50%;\n\t}\n}\n\n.wc-block-components-radio-control__label,\n.wc-block-components-radio-control__secondary-label {\n\t// Currently, max() CSS function calls need to be wrapped with unquote.\n\t// See: https://github.com/sass/sass/issues/2378#issuecomment-367490840\n\t// These values should be the same as the control input height.\n\tline-height: string.unquote(\"max(1.5rem, 24px)\");\n}\n\n.wc-block-components-radio-control__description,\n.wc-block-components-radio-control__secondary-description {\n\t@include font-size(small);\n\tline-height: 1.55;\n}\n\n// Extra class for specificity.\n.wc-block-components-radio-control {\n\t.wc-block-components-radio-control__input {\n\t\tappearance: none;\n\t\tbackground: #fff;\n\t\tborder: 1px solid $universal-border-medium;\n\t\tborder-radius: 50%;\n\t\tdisplay: inline-block;\n\t\theight: em(24px); // =1.5rem\n\t\tmin-height: 24px;\n\t\tmin-width: 24px;\n\t\twidth: em(24px);\n\t\t// The code belows centers the input vertically.\n\t\tposition: absolute;\n\t\tleft: $gap;\n\t\ttop: 50%;\n\t\ttransform: translate(0, -45%);\n\t\tmargin: inherit;\n\t\tcursor: pointer;\n\t\t&:checked {\n\t\t\tborder: 1px solid $universal-border-strong;\n\t\t}\n\n\t\t&:focus {\n\t\t\toutline: 1px solid $universal-border-strong;\n\t\t\toutline-offset: 2px;\n\t\t}\n\n\t\t&:checked::before {\n\t\t\tbackground: #000;\n\t\t\tborder-radius: 50%;\n\t\t\tcontent: \"\";\n\t\t\tdisplay: block;\n\t\t\theight: em(12px);\n\t\t\tleft: 50%;\n\t\t\tmargin: 0;\n\t\t\tmin-height: 12px;\n\t\t\tmin-width: 12px;\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\ttransform: translate(-50%, -50%);\n\t\t\twidth: em(12px);\n\t\t}\n\n\t\t.has-dark-controls & {\n\t\t\tborder-color: $controls-border-dark;\n\t\t\tbackground-color: $input-background-dark;\n\n\t\t\t&:checked {\n\t\t\t\tborder-color: $input-text-dark;\n\t\t\t}\n\n\t\t\t&:checked::before {\n\t\t\t\tbackground: $input-text-dark;\n\t\t\t}\n\n\t\t\t&:focus {\n\t\t\t\toutline: 1px solid $input-text-dark;\n\t\t\t\toutline-offset: 1px;\n\t\t\t}\n\t\t}\n\n\t\t&[aria-disabled=\"true\"],\n\t\t&[disabled] {\n\t\t\tcursor: not-allowed;\n\t\t\topacity: 0.5;\n\t\t\ttransition: opacity 200ms ease;\n\t\t}\n\t}\n}\n\n.theme-twentytwentyone {\n\t.wc-block-components-radio-control\n\t.wc-block-components-radio-control__input {\n\t\t&:checked {\n\t\t\tborder-width: 2px;\n\n\t\t\t&::before {\n\t\t\t\tbackground-color: var(--form--color-text);\n\t\t\t}\n\t\t}\n\n\t\t&::after {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n","@import \"node_modules/@wordpress/base-styles/colors\";\n@import \"node_modules/@automattic/color-studio/dist/color-variables\";\n\n// Bright colors\n$discount-color: $alert-green;\n\n$input-border-gray: #50575e;\n$input-border-dark: rgba(255, 255, 255, 0.4);\n$controls-border-dark: rgba(255, 255, 255, 0.6);\n$input-text-active: #2b2d2f;\n$input-placeholder-dark: rgba(255, 255, 255, 0.6);\n$input-text-dark: #fff;\n$input-background-dark: rgba(0, 0, 0, 0.1);\n$select-dropdown-dark: #1e1e1e;\n$select-dropdown-light: #fff;\n$select-item-dark: rgba(0, 0, 0, 0.4);\n$image-placeholder-border-color: #f2f2f2;\n\n// Universal colors for use on the frontend, currently being applied to checkout blocks.\n$universal-border-light: rgba(17, 17, 17, 0.11); // #e7e7e7 on white. Used for low contrast decorative elements such as section borders.\n$universal-border-medium: rgba(25, 23, 17, 0.48); // Used for radio and checkbox resting state.\n$universal-border-strong: rgba(17, 17, 17, 0.8); // #1e1e1e on white. Used for low contrast decorative elements such as input borders.\n$universal-body-low-emphasis: rgba(17, 17, 17, 0.7); // Used for low emphasis text such as input labels.\n$universal-background: rgba(17, 17, 17, 0.02); // Used for low contrast decorative elements background color.\n","@import \"node_modules/@wordpress/base-styles/variables\";\n\n// grid-unit from base-styles is 8px.\n$gap-huge:     7 * $grid-unit;\t\t// 56px\n$gap-largest:  6 * $grid-unit;\t\t// 48px\n$gap-larger:   4.5 * $grid-unit;\t// 36px\n$gap-large:    3 * $grid-unit;\t\t// 24px\n$gap:          2 * $grid-unit;\t\t// 16px\n$gap-small:    1.5 * $grid-unit;\t// 12px\n$gap-smaller:  1 * $grid-unit;\t\t// 8px\n$gap-smallest: 0.5 * $grid-unit;\t// 4px\n\n// Standard border radius for forms.\n$universal-border-radius: 4px;\n"],"names":[],"sourceRoot":""}